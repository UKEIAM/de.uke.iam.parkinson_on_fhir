/*
 * This file is generated by jOOQ.
 */
package de.uke.iam.parkinson_on_fhir.database;


import de.uke.iam.parkinson_on_fhir.database.tables.Assessments;
import de.uke.iam.parkinson_on_fhir.database.tables.Bodyparts;
import de.uke.iam.parkinson_on_fhir.database.tables.Devices;
import de.uke.iam.parkinson_on_fhir.database.tables.Measurements;
import de.uke.iam.parkinson_on_fhir.database.tables.Ratings;
import de.uke.iam.parkinson_on_fhir.database.tables.Sensors;
import de.uke.iam.parkinson_on_fhir.database.tables.Sources;
import de.uke.iam.parkinson_on_fhir.database.tables.Subjects;
import de.uke.iam.parkinson_on_fhir.database.tables.Tasks;
import de.uke.iam.parkinson_on_fhir.database.tables.Tasktypes;
import de.uke.iam.parkinson_on_fhir.database.tables.records.AssessmentsRecord;
import de.uke.iam.parkinson_on_fhir.database.tables.records.BodypartsRecord;
import de.uke.iam.parkinson_on_fhir.database.tables.records.DevicesRecord;
import de.uke.iam.parkinson_on_fhir.database.tables.records.MeasurementsRecord;
import de.uke.iam.parkinson_on_fhir.database.tables.records.RatingsRecord;
import de.uke.iam.parkinson_on_fhir.database.tables.records.SensorsRecord;
import de.uke.iam.parkinson_on_fhir.database.tables.records.SourcesRecord;
import de.uke.iam.parkinson_on_fhir.database.tables.records.SubjectsRecord;
import de.uke.iam.parkinson_on_fhir.database.tables.records.TasksRecord;
import de.uke.iam.parkinson_on_fhir.database.tables.records.TasktypesRecord;

import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.Internal;


/**
 * A class modelling foreign key relationships and constraints of tables of 
 * the <code>public</code> schema.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Keys {

    // -------------------------------------------------------------------------
    // IDENTITY definitions
    // -------------------------------------------------------------------------

    public static final Identity<SensorsRecord, Integer> IDENTITY_SENSORS = Identities0.IDENTITY_SENSORS;
    public static final Identity<SourcesRecord, Integer> IDENTITY_SOURCES = Identities0.IDENTITY_SOURCES;
    public static final Identity<SubjectsRecord, Integer> IDENTITY_SUBJECTS = Identities0.IDENTITY_SUBJECTS;
    public static final Identity<TasksRecord, Integer> IDENTITY_TASKS = Identities0.IDENTITY_TASKS;

    // -------------------------------------------------------------------------
    // UNIQUE and PRIMARY KEY definitions
    // -------------------------------------------------------------------------

    public static final UniqueKey<AssessmentsRecord> ASSESSMENTS_PKEY = UniqueKeys0.ASSESSMENTS_PKEY;
    public static final UniqueKey<BodypartsRecord> BODYPARTS_PKEY = UniqueKeys0.BODYPARTS_PKEY;
    public static final UniqueKey<DevicesRecord> DEVICES_PKEY = UniqueKeys0.DEVICES_PKEY;
    public static final UniqueKey<MeasurementsRecord> MEASUREMENTS_PKEY = UniqueKeys0.MEASUREMENTS_PKEY;
    public static final UniqueKey<RatingsRecord> RATINGS_PKEY = UniqueKeys0.RATINGS_PKEY;
    public static final UniqueKey<SensorsRecord> SENSORS_PKEY = UniqueKeys0.SENSORS_PKEY;
    public static final UniqueKey<SourcesRecord> SOURCES_PKEY = UniqueKeys0.SOURCES_PKEY;
    public static final UniqueKey<SubjectsRecord> SUBJECTS_PKEY = UniqueKeys0.SUBJECTS_PKEY;
    public static final UniqueKey<TasksRecord> TASKS_PKEY = UniqueKeys0.TASKS_PKEY;
    public static final UniqueKey<TasktypesRecord> TASKTYPES_PKEY = UniqueKeys0.TASKTYPES_PKEY;

    // -------------------------------------------------------------------------
    // FOREIGN KEY definitions
    // -------------------------------------------------------------------------

    public static final ForeignKey<MeasurementsRecord, SensorsRecord> MEASUREMENTS__SENSOR_FK = ForeignKeys0.MEASUREMENTS__SENSOR_FK;
    public static final ForeignKey<MeasurementsRecord, SubjectsRecord> MEASUREMENTS__SUBJECT_FK = ForeignKeys0.MEASUREMENTS__SUBJECT_FK;
    public static final ForeignKey<RatingsRecord, SensorsRecord> RATINGS__SENSOR_FK = ForeignKeys0.RATINGS__SENSOR_FK;
    public static final ForeignKey<RatingsRecord, TasksRecord> RATINGS__TASK_FK = ForeignKeys0.RATINGS__TASK_FK;
    public static final ForeignKey<RatingsRecord, AssessmentsRecord> RATINGS__ASSESSMENT_FK = ForeignKeys0.RATINGS__ASSESSMENT_FK;
    public static final ForeignKey<SensorsRecord, DevicesRecord> SENSORS__DEVICE_FK = ForeignKeys0.SENSORS__DEVICE_FK;
    public static final ForeignKey<SensorsRecord, BodypartsRecord> SENSORS__BODY_PART_FK = ForeignKeys0.SENSORS__BODY_PART_FK;
    public static final ForeignKey<SubjectsRecord, SourcesRecord> SUBJECTS__SOURCE_FK = ForeignKeys0.SUBJECTS__SOURCE_FK;
    public static final ForeignKey<TasksRecord, SubjectsRecord> TASKS__SUBJECT_FK = ForeignKeys0.TASKS__SUBJECT_FK;
    public static final ForeignKey<TasksRecord, TasktypesRecord> TASKS__TASK_TYPE_FK = ForeignKeys0.TASKS__TASK_TYPE_FK;

    // -------------------------------------------------------------------------
    // [#1459] distribute members to avoid static initialisers > 64kb
    // -------------------------------------------------------------------------

    private static class Identities0 {
        public static Identity<SensorsRecord, Integer> IDENTITY_SENSORS = Internal.createIdentity(Sensors.SENSORS, Sensors.SENSORS.SENSOR_ID);
        public static Identity<SourcesRecord, Integer> IDENTITY_SOURCES = Internal.createIdentity(Sources.SOURCES, Sources.SOURCES.SOURCE_ID);
        public static Identity<SubjectsRecord, Integer> IDENTITY_SUBJECTS = Internal.createIdentity(Subjects.SUBJECTS, Subjects.SUBJECTS.SUBJECT_ID);
        public static Identity<TasksRecord, Integer> IDENTITY_TASKS = Internal.createIdentity(Tasks.TASKS, Tasks.TASKS.TASK_ID);
    }

    private static class UniqueKeys0 {
        public static final UniqueKey<AssessmentsRecord> ASSESSMENTS_PKEY = Internal.createUniqueKey(Assessments.ASSESSMENTS, "assessments_pkey", new TableField[] { Assessments.ASSESSMENTS.NAME }, true);
        public static final UniqueKey<BodypartsRecord> BODYPARTS_PKEY = Internal.createUniqueKey(Bodyparts.BODYPARTS, "bodyparts_pkey", new TableField[] { Bodyparts.BODYPARTS.NAME }, true);
        public static final UniqueKey<DevicesRecord> DEVICES_PKEY = Internal.createUniqueKey(Devices.DEVICES, "devices_pkey", new TableField[] { Devices.DEVICES.DEVICE }, true);
        public static final UniqueKey<MeasurementsRecord> MEASUREMENTS_PKEY = Internal.createUniqueKey(Measurements.MEASUREMENTS, "measurements_pkey", new TableField[] { Measurements.MEASUREMENTS.TIMESTAMP, Measurements.MEASUREMENTS.SENSOR, Measurements.MEASUREMENTS.SUBJECT }, true);
        public static final UniqueKey<RatingsRecord> RATINGS_PKEY = Internal.createUniqueKey(Ratings.RATINGS, "ratings_pkey", new TableField[] { Ratings.RATINGS.SENSOR, Ratings.RATINGS.TASK, Ratings.RATINGS.ASSESSMENT }, true);
        public static final UniqueKey<SensorsRecord> SENSORS_PKEY = Internal.createUniqueKey(Sensors.SENSORS, "sensors_pkey", new TableField[] { Sensors.SENSORS.SENSOR_ID }, true);
        public static final UniqueKey<SourcesRecord> SOURCES_PKEY = Internal.createUniqueKey(Sources.SOURCES, "sources_pkey", new TableField[] { Sources.SOURCES.SOURCE_ID }, true);
        public static final UniqueKey<SubjectsRecord> SUBJECTS_PKEY = Internal.createUniqueKey(Subjects.SUBJECTS, "subjects_pkey", new TableField[] { Subjects.SUBJECTS.SUBJECT_ID }, true);
        public static final UniqueKey<TasksRecord> TASKS_PKEY = Internal.createUniqueKey(Tasks.TASKS, "tasks_pkey", new TableField[] { Tasks.TASKS.TASK_ID }, true);
        public static final UniqueKey<TasktypesRecord> TASKTYPES_PKEY = Internal.createUniqueKey(Tasktypes.TASKTYPES, "tasktypes_pkey", new TableField[] { Tasktypes.TASKTYPES.NAME }, true);
    }

    private static class ForeignKeys0 {
        public static final ForeignKey<MeasurementsRecord, SensorsRecord> MEASUREMENTS__SENSOR_FK = Internal.createForeignKey(Keys.SENSORS_PKEY, Measurements.MEASUREMENTS, "sensor_fk", new TableField[] { Measurements.MEASUREMENTS.SENSOR }, true);
        public static final ForeignKey<MeasurementsRecord, SubjectsRecord> MEASUREMENTS__SUBJECT_FK = Internal.createForeignKey(Keys.SUBJECTS_PKEY, Measurements.MEASUREMENTS, "subject_fk", new TableField[] { Measurements.MEASUREMENTS.SUBJECT }, true);
        public static final ForeignKey<RatingsRecord, SensorsRecord> RATINGS__SENSOR_FK = Internal.createForeignKey(Keys.SENSORS_PKEY, Ratings.RATINGS, "sensor_fk", new TableField[] { Ratings.RATINGS.SENSOR }, true);
        public static final ForeignKey<RatingsRecord, TasksRecord> RATINGS__TASK_FK = Internal.createForeignKey(Keys.TASKS_PKEY, Ratings.RATINGS, "task_fk", new TableField[] { Ratings.RATINGS.TASK }, true);
        public static final ForeignKey<RatingsRecord, AssessmentsRecord> RATINGS__ASSESSMENT_FK = Internal.createForeignKey(Keys.ASSESSMENTS_PKEY, Ratings.RATINGS, "assessment_fk", new TableField[] { Ratings.RATINGS.ASSESSMENT }, true);
        public static final ForeignKey<SensorsRecord, DevicesRecord> SENSORS__DEVICE_FK = Internal.createForeignKey(Keys.DEVICES_PKEY, Sensors.SENSORS, "device_fk", new TableField[] { Sensors.SENSORS.DEVICE }, true);
        public static final ForeignKey<SensorsRecord, BodypartsRecord> SENSORS__BODY_PART_FK = Internal.createForeignKey(Keys.BODYPARTS_PKEY, Sensors.SENSORS, "body_part_fk", new TableField[] { Sensors.SENSORS.BODY_PART }, true);
        public static final ForeignKey<SubjectsRecord, SourcesRecord> SUBJECTS__SOURCE_FK = Internal.createForeignKey(Keys.SOURCES_PKEY, Subjects.SUBJECTS, "source_fk", new TableField[] { Subjects.SUBJECTS.SOURCE }, true);
        public static final ForeignKey<TasksRecord, SubjectsRecord> TASKS__SUBJECT_FK = Internal.createForeignKey(Keys.SUBJECTS_PKEY, Tasks.TASKS, "subject_fk", new TableField[] { Tasks.TASKS.SUBJECT }, true);
        public static final ForeignKey<TasksRecord, TasktypesRecord> TASKS__TASK_TYPE_FK = Internal.createForeignKey(Keys.TASKTYPES_PKEY, Tasks.TASKS, "task_type_fk", new TableField[] { Tasks.TASKS.TASK_TYPE }, true);
    }
}
