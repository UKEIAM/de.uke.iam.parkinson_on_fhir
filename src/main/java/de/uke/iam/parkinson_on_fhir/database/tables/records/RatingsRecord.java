/*
 * This file is generated by jOOQ.
 */
package de.uke.iam.parkinson_on_fhir.database.tables.records;


import de.uke.iam.parkinson_on_fhir.database.tables.Ratings;

import org.jooq.Field;
import org.jooq.Record3;
import org.jooq.Record5;
import org.jooq.Row5;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class RatingsRecord extends UpdatableRecordImpl<RatingsRecord> implements Record5<Integer, Integer, String, Float, String> {

    private static final long serialVersionUID = 1058981070;

    /**
     * Setter for <code>public.ratings.sensor</code>.
     */
    public void setSensor(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.ratings.sensor</code>.
     */
    public Integer getSensor() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.ratings.task</code>.
     */
    public void setTask(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.ratings.task</code>.
     */
    public Integer getTask() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.ratings.assessment</code>.
     */
    public void setAssessment(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.ratings.assessment</code>.
     */
    public String getAssessment() {
        return (String) get(2);
    }

    /**
     * Setter for <code>public.ratings.rating</code>.
     */
    public void setRating(Float value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.ratings.rating</code>.
     */
    public Float getRating() {
        return (Float) get(3);
    }

    /**
     * Setter for <code>public.ratings.comment</code>.
     */
    public void setComment(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.ratings.comment</code>.
     */
    public String getComment() {
        return (String) get(4);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record3<Integer, Integer, String> key() {
        return (Record3) super.key();
    }

    // -------------------------------------------------------------------------
    // Record5 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row5<Integer, Integer, String, Float, String> fieldsRow() {
        return (Row5) super.fieldsRow();
    }

    @Override
    public Row5<Integer, Integer, String, Float, String> valuesRow() {
        return (Row5) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Ratings.RATINGS.SENSOR;
    }

    @Override
    public Field<Integer> field2() {
        return Ratings.RATINGS.TASK;
    }

    @Override
    public Field<String> field3() {
        return Ratings.RATINGS.ASSESSMENT;
    }

    @Override
    public Field<Float> field4() {
        return Ratings.RATINGS.RATING;
    }

    @Override
    public Field<String> field5() {
        return Ratings.RATINGS.COMMENT;
    }

    @Override
    public Integer component1() {
        return getSensor();
    }

    @Override
    public Integer component2() {
        return getTask();
    }

    @Override
    public String component3() {
        return getAssessment();
    }

    @Override
    public Float component4() {
        return getRating();
    }

    @Override
    public String component5() {
        return getComment();
    }

    @Override
    public Integer value1() {
        return getSensor();
    }

    @Override
    public Integer value2() {
        return getTask();
    }

    @Override
    public String value3() {
        return getAssessment();
    }

    @Override
    public Float value4() {
        return getRating();
    }

    @Override
    public String value5() {
        return getComment();
    }

    @Override
    public RatingsRecord value1(Integer value) {
        setSensor(value);
        return this;
    }

    @Override
    public RatingsRecord value2(Integer value) {
        setTask(value);
        return this;
    }

    @Override
    public RatingsRecord value3(String value) {
        setAssessment(value);
        return this;
    }

    @Override
    public RatingsRecord value4(Float value) {
        setRating(value);
        return this;
    }

    @Override
    public RatingsRecord value5(String value) {
        setComment(value);
        return this;
    }

    @Override
    public RatingsRecord values(Integer value1, Integer value2, String value3, Float value4, String value5) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached RatingsRecord
     */
    public RatingsRecord() {
        super(Ratings.RATINGS);
    }

    /**
     * Create a detached, initialised RatingsRecord
     */
    public RatingsRecord(Integer sensor, Integer task, String assessment, Float rating, String comment) {
        super(Ratings.RATINGS);

        set(0, sensor);
        set(1, task);
        set(2, assessment);
        set(3, rating);
        set(4, comment);
    }
}
