/*
 * This file is generated by jOOQ.
 */
package de.uke.iam.parkinson_on_fhir.database.tables.records;


import de.uke.iam.parkinson_on_fhir.database.tables.Subjects;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record3;
import org.jooq.Row3;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class SubjectsRecord extends UpdatableRecordImpl<SubjectsRecord> implements Record3<Integer, Integer, String> {

    private static final long serialVersionUID = -1614056347;

    /**
     * Setter for <code>public.subjects.subject_id</code>.
     */
    public void setSubjectId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.subjects.subject_id</code>.
     */
    public Integer getSubjectId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.subjects.source</code>.
     */
    public void setSource(Integer value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.subjects.source</code>.
     */
    public Integer getSource() {
        return (Integer) get(1);
    }

    /**
     * Setter for <code>public.subjects.description</code>.
     */
    public void setDescription(String value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.subjects.description</code>.
     */
    public String getDescription() {
        return (String) get(2);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record3 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row3<Integer, Integer, String> fieldsRow() {
        return (Row3) super.fieldsRow();
    }

    @Override
    public Row3<Integer, Integer, String> valuesRow() {
        return (Row3) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Subjects.SUBJECTS.SUBJECT_ID;
    }

    @Override
    public Field<Integer> field2() {
        return Subjects.SUBJECTS.SOURCE;
    }

    @Override
    public Field<String> field3() {
        return Subjects.SUBJECTS.DESCRIPTION;
    }

    @Override
    public Integer component1() {
        return getSubjectId();
    }

    @Override
    public Integer component2() {
        return getSource();
    }

    @Override
    public String component3() {
        return getDescription();
    }

    @Override
    public Integer value1() {
        return getSubjectId();
    }

    @Override
    public Integer value2() {
        return getSource();
    }

    @Override
    public String value3() {
        return getDescription();
    }

    @Override
    public SubjectsRecord value1(Integer value) {
        setSubjectId(value);
        return this;
    }

    @Override
    public SubjectsRecord value2(Integer value) {
        setSource(value);
        return this;
    }

    @Override
    public SubjectsRecord value3(String value) {
        setDescription(value);
        return this;
    }

    @Override
    public SubjectsRecord values(Integer value1, Integer value2, String value3) {
        value1(value1);
        value2(value2);
        value3(value3);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached SubjectsRecord
     */
    public SubjectsRecord() {
        super(Subjects.SUBJECTS);
    }

    /**
     * Create a detached, initialised SubjectsRecord
     */
    public SubjectsRecord(Integer subjectId, Integer source, String description) {
        super(Subjects.SUBJECTS);

        set(0, subjectId);
        set(1, source);
        set(2, description);
    }
}
