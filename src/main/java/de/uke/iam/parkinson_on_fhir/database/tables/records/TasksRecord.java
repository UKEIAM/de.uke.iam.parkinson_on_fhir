/*
 * This file is generated by jOOQ.
 */
package de.uke.iam.parkinson_on_fhir.database.tables.records;


import de.uke.iam.parkinson_on_fhir.database.tables.Tasks;

import java.time.LocalDateTime;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record6;
import org.jooq.Row6;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class TasksRecord extends UpdatableRecordImpl<TasksRecord> implements Record6<Integer, LocalDateTime, LocalDateTime, Integer, String, Boolean> {

    private static final long serialVersionUID = -1339802521;

    /**
     * Setter for <code>public.tasks.task_id</code>.
     */
    public void setTaskId(Integer value) {
        set(0, value);
    }

    /**
     * Getter for <code>public.tasks.task_id</code>.
     */
    public Integer getTaskId() {
        return (Integer) get(0);
    }

    /**
     * Setter for <code>public.tasks.task_start</code>.
     */
    public void setTaskStart(LocalDateTime value) {
        set(1, value);
    }

    /**
     * Getter for <code>public.tasks.task_start</code>.
     */
    public LocalDateTime getTaskStart() {
        return (LocalDateTime) get(1);
    }

    /**
     * Setter for <code>public.tasks.task_end</code>.
     */
    public void setTaskEnd(LocalDateTime value) {
        set(2, value);
    }

    /**
     * Getter for <code>public.tasks.task_end</code>.
     */
    public LocalDateTime getTaskEnd() {
        return (LocalDateTime) get(2);
    }

    /**
     * Setter for <code>public.tasks.subject</code>.
     */
    public void setSubject(Integer value) {
        set(3, value);
    }

    /**
     * Getter for <code>public.tasks.subject</code>.
     */
    public Integer getSubject() {
        return (Integer) get(3);
    }

    /**
     * Setter for <code>public.tasks.task_type</code>.
     */
    public void setTaskType(String value) {
        set(4, value);
    }

    /**
     * Getter for <code>public.tasks.task_type</code>.
     */
    public String getTaskType() {
        return (String) get(4);
    }

    /**
     * Setter for <code>public.tasks.is_precisely_annotated</code>.
     */
    public void setIsPreciselyAnnotated(Boolean value) {
        set(5, value);
    }

    /**
     * Getter for <code>public.tasks.is_precisely_annotated</code>.
     */
    public Boolean getIsPreciselyAnnotated() {
        return (Boolean) get(5);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    @Override
    public Record1<Integer> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record6 type implementation
    // -------------------------------------------------------------------------

    @Override
    public Row6<Integer, LocalDateTime, LocalDateTime, Integer, String, Boolean> fieldsRow() {
        return (Row6) super.fieldsRow();
    }

    @Override
    public Row6<Integer, LocalDateTime, LocalDateTime, Integer, String, Boolean> valuesRow() {
        return (Row6) super.valuesRow();
    }

    @Override
    public Field<Integer> field1() {
        return Tasks.TASKS.TASK_ID;
    }

    @Override
    public Field<LocalDateTime> field2() {
        return Tasks.TASKS.TASK_START;
    }

    @Override
    public Field<LocalDateTime> field3() {
        return Tasks.TASKS.TASK_END;
    }

    @Override
    public Field<Integer> field4() {
        return Tasks.TASKS.SUBJECT;
    }

    @Override
    public Field<String> field5() {
        return Tasks.TASKS.TASK_TYPE;
    }

    @Override
    public Field<Boolean> field6() {
        return Tasks.TASKS.IS_PRECISELY_ANNOTATED;
    }

    @Override
    public Integer component1() {
        return getTaskId();
    }

    @Override
    public LocalDateTime component2() {
        return getTaskStart();
    }

    @Override
    public LocalDateTime component3() {
        return getTaskEnd();
    }

    @Override
    public Integer component4() {
        return getSubject();
    }

    @Override
    public String component5() {
        return getTaskType();
    }

    @Override
    public Boolean component6() {
        return getIsPreciselyAnnotated();
    }

    @Override
    public Integer value1() {
        return getTaskId();
    }

    @Override
    public LocalDateTime value2() {
        return getTaskStart();
    }

    @Override
    public LocalDateTime value3() {
        return getTaskEnd();
    }

    @Override
    public Integer value4() {
        return getSubject();
    }

    @Override
    public String value5() {
        return getTaskType();
    }

    @Override
    public Boolean value6() {
        return getIsPreciselyAnnotated();
    }

    @Override
    public TasksRecord value1(Integer value) {
        setTaskId(value);
        return this;
    }

    @Override
    public TasksRecord value2(LocalDateTime value) {
        setTaskStart(value);
        return this;
    }

    @Override
    public TasksRecord value3(LocalDateTime value) {
        setTaskEnd(value);
        return this;
    }

    @Override
    public TasksRecord value4(Integer value) {
        setSubject(value);
        return this;
    }

    @Override
    public TasksRecord value5(String value) {
        setTaskType(value);
        return this;
    }

    @Override
    public TasksRecord value6(Boolean value) {
        setIsPreciselyAnnotated(value);
        return this;
    }

    @Override
    public TasksRecord values(Integer value1, LocalDateTime value2, LocalDateTime value3, Integer value4, String value5, Boolean value6) {
        value1(value1);
        value2(value2);
        value3(value3);
        value4(value4);
        value5(value5);
        value6(value6);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached TasksRecord
     */
    public TasksRecord() {
        super(Tasks.TASKS);
    }

    /**
     * Create a detached, initialised TasksRecord
     */
    public TasksRecord(Integer taskId, LocalDateTime taskStart, LocalDateTime taskEnd, Integer subject, String taskType, Boolean isPreciselyAnnotated) {
        super(Tasks.TASKS);

        set(0, taskId);
        set(1, taskStart);
        set(2, taskEnd);
        set(3, subject);
        set(4, taskType);
        set(5, isPreciselyAnnotated);
    }
}
